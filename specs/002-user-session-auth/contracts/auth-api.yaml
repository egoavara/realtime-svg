openapi: 3.0.3
info:
  title: JWT Authentication API
  description: JWT 토큰 발급 및 JWK 공개 키 조회 API
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: 로컬 개발 서버

paths:
  /api/auth/token:
    post:
      summary: JWT 토큰 발급
      description: |
        사용자 ID를 받아 JWT 토큰을 발급합니다.
        인증 없이 호출 가능하며, 단순히 user_id를 sub claim에 포함한 토큰을 생성합니다.
      operationId: issueToken
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: string
                  description: 토큰에 포함될 사용자 ID
                  example: "user123"
                ttl_seconds:
                  type: integer
                  description: 토큰 만료 시간 (초 단위, 기본값 86400 = 24시간)
                  default: 86400
                  example: 86400
            examples:
              default:
                summary: 기본 토큰 발급
                value:
                  user_id: "alice"
              custom_ttl:
                summary: 커스텀 만료 시간
                value:
                  user_id: "bob"
                  ttl_seconds: 3600
      responses:
        '200':
          description: 토큰 발급 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    type: string
                    description: JWT 토큰 (RS256 서명)
                    example: "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwiZXhwIjoxNzM0NDgwMDAwLCJpYXQiOjE3MzQ0MDAwMDAsImlzcyI6InJlYWx0aW1lLXN2ZyJ9.signature..."
              examples:
                success:
                  summary: 성공 응답
                  value:
                    token: "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGljZSIsImV4cCI6MTczNDQ4MDAwMCwiaWF0IjoxNzM0NDAwMDAwLCJpc3MiOiJyZWFsdGltZS1zdmcifQ.signature"
        '400':
          description: 잘못된 요청 (user_id 누락 또는 빈 문자열)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                missing_user_id:
                  summary: user_id 누락
                  value:
                    error: "user_id is required"
                empty_user_id:
                  summary: user_id 빈 문자열
                  value:
                    error: "user_id cannot be empty"
        '500':
          description: 서버 내부 오류 (JWK 로드 실패, 서명 실패 등)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                jwk_error:
                  summary: JWK 로드 실패
                  value:
                    error: "Failed to load JWK from Redis"

  /.well-known/jwks.json:
    get:
      summary: JWKS 공개 키 조회 (RFC 8414 표준 경로)
      description: |
        JWT 검증에 사용할 JWK 공개 키를 조회합니다.
        RFC 7517 JWKS (JSON Web Key Set) 형식으로 반환하며,
        OAuth 2.0 / OIDC 표준 경로를 따릅니다.
      operationId: getJwks
      tags:
        - Authentication
      responses:
        '200':
          description: 공개 키 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwkSet'
              examples:
                success:
                  summary: 성공 응답
                  value:
                    keys:
                      - kty: "RSA"
                        n: "xGOr-H7A-wiuVDjc..."
                        e: "AQAB"
                        alg: "RS256"
                        key_use: "sig"
        '500':
          description: 서버 내부 오류 (JWK 로드 실패)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    JwkSet:
      type: object
      description: |
        JWKS (JSON Web Key Set) - RFC 7517
        jsonwebtoken::JwkSet 객체를 JSON 직렬화한 형태
      required:
        - keys
      properties:
        keys:
          type: array
          description: JWK 배열
          items:
            $ref: '#/components/schemas/JwkPublic'
    
    JwkPublic:
      type: object
      description: |
        JWK 공개 키 (RFC 7517)
        jsonwebtoken::Jwk 객체를 JSON 직렬화한 형태
      required:
        - kty
        - n
        - e
      properties:
        kty:
          type: string
          description: 키 타입
          enum: ["RSA"]
          example: "RSA"
        n:
          type: string
          description: RSA Modulus (base64url 인코딩)
          example: "xGOr-H7A-wiuVDjc9FcF8ao9s..."
        e:
          type: string
          description: RSA Exponent (base64url 인코딩)
          example: "AQAB"
        alg:
          type: string
          description: 알고리즘
          enum: ["RS256"]
          example: "RS256"
        use:
          type: string
          description: 키 용도 (RFC 7517 표준 필드명)
          enum: ["sig"]
          example: "sig"

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: 에러 메시지
          example: "user_id is required"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT 토큰을 Authorization 헤더에 포함합니다.
        형식: `Authorization: Bearer <token>`

tags:
  - name: Authentication
    description: JWT 토큰 발급 및 검증 관련 API
