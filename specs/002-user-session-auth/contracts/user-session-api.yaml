openapi: 3.0.3
info:
  title: User Session API
  description: 사용자별 세션 생성, 수정, 조회 및 스트림 API
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: 로컬 개발 서버

paths:
  /api/user/{user_id}/session:
    post:
      summary: 사용자 세션 생성
      description: |
        특정 사용자의 새로운 세션을 생성합니다.
        JWT 인증이 필요하며, 토큰의 sub claim이 URL의 user_id와 일치해야 합니다.
      operationId: createUserSession
      tags:
        - User Sessions
      security:
        - BearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          description: 세션 소유자 사용자 ID
          schema:
            type: string
          example: "alice"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - session_id
                - template
              properties:
                session_id:
                  type: string
                  description: 세션 ID (user_id와 결합하여 고유성 보장)
                  example: "my-dashboard"
                template:
                  type: string
                  description: Tera 템플릿 문자열
                  example: "<svg>{{text}}</svg>"
                args:
                  type: object
                  description: 템플릿 파라미터 (JSON 객체)
                  additionalProperties: true
                  example:
                    text: "Hello"
                expire_seconds:
                  type: integer
                  description: 세션 TTL (초 단위, 기본값 3600)
                  default: 3600
                  example: 3600
            examples:
              basic:
                summary: 기본 세션 생성
                value:
                  session_id: "status-widget"
                  template: "<svg><text>{{status}}</text></svg>"
                  args:
                    status: "online"
      responses:
        '201':
          description: 세션 생성 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                  - session_id
                properties:
                  user_id:
                    type: string
                    example: "alice"
                  session_id:
                    type: string
                    example: "my-dashboard"
        '400':
          description: 잘못된 요청 (필수 필드 누락)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 인증 실패 (토큰 없음, 만료, 서명 오류)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                missing_token:
                  value:
                    error: "Missing Authorization header"
                expired_token:
                  value:
                    error: "Token expired"
        '403':
          description: 권한 없음 (토큰의 user_id와 URL의 user_id 불일치)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                user_mismatch:
                  value:
                    error: "User bob cannot modify sessions of user alice"
        '409':
          description: 세션 ID 충돌 (동일한 user_id + session_id 조합 이미 존재)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/user/{user_id}/session/{session_id}:
    put:
      summary: 사용자 세션 수정
      description: |
        세션의 템플릿 파라미터를 업데이트합니다.
        JWT 인증 및 소유자 확인 필요.
      operationId: updateUserSession
      tags:
        - User Sessions
      security:
        - BearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
          example: "alice"
        - name: session_id
          in: path
          required: true
          schema:
            type: string
          example: "my-dashboard"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - args
              properties:
                args:
                  type: object
                  description: 업데이트할 템플릿 파라미터
                  additionalProperties: true
                  example:
                    text: "Updated"
            examples:
              update:
                summary: 파라미터 업데이트
                value:
                  args:
                    status: "offline"
                    color: "red"
      responses:
        '204':
          description: 업데이트 성공 (본문 없음)
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 세션을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/user/{user_id}/sessions:
    get:
      summary: 사용자 세션 목록 조회
      description: |
        특정 사용자가 생성한 모든 세션 목록을 조회합니다.
        JWT 인증 필요.
      operationId: listUserSessions
      tags:
        - User Sessions
      security:
        - BearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
          example: "alice"
      responses:
        '200':
          description: 세션 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - sessions
                properties:
                  sessions:
                    type: array
                    items:
                      type: object
                      required:
                        - session_id
                        - created_at
                      properties:
                        session_id:
                          type: string
                          example: "my-dashboard"
                        created_at:
                          type: string
                          format: date-time
                          example: "2025-10-17T10:30:00Z"
                        ttl:
                          type: integer
                          description: 남은 TTL (초)
                          example: 3200
              examples:
                success:
                  summary: 성공 응답
                  value:
                    sessions:
                      - session_id: "dashboard-1"
                        created_at: "2025-10-17T10:00:00Z"
                        ttl: 3600
                      - session_id: "widget-status"
                        created_at: "2025-10-17T09:30:00Z"
                        ttl: 3200
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /stream/{user_id}/{session_id}:
    get:
      summary: 사용자 세션 스트림
      description: |
        사용자별 세션의 SVG 스트림에 접근합니다.
        인증 불필요 (공개 읽기).
        multipart/x-mixed-replace 프로토콜 사용.
      operationId: streamUserSession
      tags:
        - Streaming
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
          example: "alice"
        - name: session_id
          in: path
          required: true
          schema:
            type: string
          example: "my-dashboard"
        - name: double_frame
          in: query
          required: false
          description: 프레임 중복 전송 (일부 브라우저 호환성)
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: 스트림 시작
          content:
            multipart/x-mixed-replace; boundary=frame:
              schema:
                type: string
                format: binary
                description: |
                  SVG 프레임 스트림
                  각 프레임 형식:
                  --frame
                  Content-Type: image/svg+xml
                  Content-Length: <size>
                  
                  <svg>...</svg>
                  --frame
        '404':
          description: 세션을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: 에러 메시지
          example: "Session not found"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT 토큰을 Authorization 헤더에 포함합니다.
        형식: `Authorization: Bearer <token>`

tags:
  - name: User Sessions
    description: 사용자별 세션 관리 API
  - name: Streaming
    description: 실시간 SVG 스트림 API
